/* This the styling for all button elements and any element with a class of .button */
button, .button, .pagination li {
    /* These are CSS variables for the default button states */
    --default-bg-color: #4d4d4d; /* default background color */
    --default-color: #ccc; /* default text color */
    --hover-color: var(--background); /* background color upon hover */
    --hover-bg-color: #e8e8e8; /* background color upon hover */

    /* These are CSS variables for the disabled button state */
    --disabled-bg-color: #ccc; /* background color when disabled */
    --disabled-color: #a8a8a8; /* text color when disabled */

    /* CSS variables for the primary button */
    --primary-bg-color: var(--primary); /* Background color for primary buttons */
    --primary-color: var(--background); /* primary text color */
    --primary-hover-color: #3de03d; /* Hover color for primary buttons */
    --primary-disabled-bg-color: #218621; /* Background color for primary buttons when disabled */
    --primary-disabled-color: #000000; /* Text color for primary buttons when disabled */

    /* Common styles to all buttons */
    background-color: var(--default-bg-color);
    border: none;
    color: var(--default-color);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    font-size: 1rem;
    margin: 4px 5px;
    cursor: pointer;
    border-radius: 100px;
    transition: background-color .2s;

    /* Styles when hovering over the button */

    &:hover {
        background-color: var(--hover-bg-color);
        color: var(--background);

        img {
            filter: invert(0);
        }
    }

    /* Styles for disabled buttons */

    &:disabled, &.disabled {
        background-color: var(--disabled-bg-color);
        color: var(--disabled-color);
        cursor: not-allowed;
    }


    img {
        filter: invert(1);
    }

    /* Styles exclusive to primary buttons */

    &.primary, &.active {
        color: var(--primary-color);
        background-color: var(--primary-bg-color);

        img {
            filter: invert(0);
        }

        /* Styles when hovering over a primary button */

        &:hover {
            background-color: var(--primary-hover-color);
        }

        /* Styles for a disabled primary button */

        &:disabled,
        &.disabled {
            background-color: var(--primary-disabled-bg-color);
            color: var(--primary-disabled-color);
        }
    }

    &#voice-search-button {
        transition: outline .2s;

        &.primary {
            animation-name: ripple;
            animation-duration: 2s;
            animation-timing-function: linear;
            animation-iteration-count: infinite;
        }
    }

    i {
        pointer-events: none;
    }

}

/* This is the styling for all input elements and any element with a class of .input */
input, .input {
    --default-bg-color: #3D3D3D; /* background color */
    --default-color: white; /* text color */
    background-color: var(--default-bg-color);
    color: var(--default-color);
    border: none;
    outline: none;
    border-radius: 100px;
    padding: 0.5rem 1rem;
    font-size: 1rem;
    font-family: inherit;


    &::-webkit-search-decoration,
    &::-webkit-search-cancel-button,
    &::-webkit-search-results-button,
    &::-webkit-search-results-decoration {
        -webkit-appearance: none;
    }
}

/* Styles for the floating input effect */
.floating-input {
    position: relative;
    margin: 1rem 0;
    /* Styles for the input box */

    input {
        width: 100%;
        max-width: -webkit-fill-available;
        max-width: -moz-available;
        max-width: fill-available;
        padding-block: 1rem;

        &::placeholder {
            opacity: 0;
        }
    }

    /* Styles for the label */

    label {
        position: absolute;
        transform: translateY(-20%);
        top: 0;
        font-size: .7rem;
        left: 0;
        padding: 0.5rem 1rem;
        transition: top, left, padding, transform, font-size;
        transition-duration: .2s;
        color: var(--default-color);
        background-color: var(--default-bg-color);
        opacity: .7;
        cursor: text;
        font-weight: 700;
    }

    /* Styles for the label when the input is not empty */

    input:placeholder-shown ~ label {
        top: 50%;
        transform: translateY(calc(-100% + 1rem));
        opacity: .5;
        font-size: 1rem;
        font-weight: normal;
    }
}

.label {
    position: fixed;
    color: var(--default-color);
    background-color: #3D3D3D;
    padding: 0.5rem 1rem;
    border-radius: 12px;
    opacity: 0;
    transition: opacity .2s;
    pointer-events: none;
    box-shadow: 0 5px 10px 0 rgba(0, 0, 0, .5);
    z-index: 999999;
}


.dropdown-items {
    position: fixed;
    display: inline-block;
    width: fit-content;
    max-height: 200px;
    overflow-y: auto;
    outline: none;
    border: none;
    z-index: 999999;

    background-color: #373737;
    color: white;
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);

    min-width: 160px;
    border-radius: 12px;
    opacity: 0;
    transition: opacity .1s;

    .dropdown-item {
        padding: 12px 16px;
        margin: 5px;
        text-decoration: none;
        display: block;
        transition: background-color .2s;
        cursor: pointer;
        border-radius: 100px;

        &:hover {
            background-color: #555;
        }
    }
}

ul {
    list-style: none;
}


.pagination {
    text-wrap: nowrap;
    flex-wrap: nowrap;

    .paginationjs-page {
        aspect-ratio: 1;
        height: 1rem;
    }


    li {
        &:hover a {
            color: black;
        }

        &.active a {
            color: black;
        }

        a {
            color: white;
        }

        &.paginationjs-ellipsis.disabled {
            opacity: .5;
            color: white;
            background-color: #282828;
        }
    }
}

@keyframes ripple {
    0% {
        outline: 0 solid transparent;
    }

    50% {
        outline: 10px solid #25b13e;
    }
    100% {
        outline: 0 solid transparent;
    }
}

[data-title] * {
    pointer-events: none;
}


toggle {
    position: relative;
    display: flex;
    justify-content: start;
    align-items: center;
    flex-direction: row-reverse;
    width: 100%;
    margin-block: 1rem;
    cursor: pointer;
    user-select: none;
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    min-width: calc(5rem + 70px);
    max-width: calc(100% - 2rem);
    padding: 1rem;
    border-radius: 105px;

    &::before {
        content: '';
        position: absolute;
        right: 1rem;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        width: 50px;
        height: 25px;
        border-radius: 100px;
        background-color: hsla(0, 0%, 60%, 0.5);
    }

    &::after {
        content: '';
        position: absolute;
        right: calc(3px + 1rem);
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        width: 20px;
        height: 20px;
        border-radius: 100px;
        background-color: var(--primary);
        transform: translateX(calc(-100% - 3px));
        transition: transform;
        transition-duration: 200ms;
    }

    &[value=true]::after {
        transform: translateX(0);
    }

    &:hover {
        background-color: hsla(0, 0%, 45%, 0.5);
    }
}


[toggle-hidden] {
    background-color: #272727;
    padding: 1rem;
    border-radius: 5px;
}

.drag-drop-area {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border: 2px dashed hsla(0, 0%, 100%, 0.5);
    border-radius: 5px;
    padding: 2rem;
    margin-bottom: 1rem;
    cursor: pointer;
    width: 90%;
    margin-inline: auto;

    box-shadow: inset 0 0 0 0 transparent;
    transition: background-color, box-shadow, border;
    transition-duration: .2s;

    &::before {
        content: "Drag & Drop";
        font-weight: 600;
        font-size: 2rem;
    }

    &.dragover {
        border-width: 0;
        background-color: white;
        color: black;
        box-shadow: inset 0 0 20px 0 black;
    }
}

a:hover {
    text-decoration: underline;
    filter: brightness(1.2);
    color: var(--primary);
}

a {
    text-decoration: none;
    color: #a7a7a7;
    transition: filter, color;
    transition-duration: .2s;
}
