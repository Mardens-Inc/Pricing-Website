button, .button {
    cursor: pointer;
    border: none;
    outline: none;
    background: var(--primary);
    color: white;
    padding: 10px 20px;
    border-radius: 5px;
    font-size: 1rem;
    font-weight: 600;
    transition: background, color;
    transition-duration: 100ms;
    border: 2px solid transparent;
}

button.secondary, .button.secondary {
    background: hsl(0, 0%, 50%);
    color: white;
}

button:hover, .button:hover {
    background: hsl(0, 0%, 0%);
    color: white;
}

input.error {
    border-color: red;
}

.drag-drop-area {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border: 2px dashed hsla(0, 0%, 0%, 0.5);
    border-radius: 5px;
    padding: 2rem;
    margin-bottom: 1rem;
    cursor: pointer;
}

.drag-drop-area::before {
    content: "Drag & Drop";
    font-weight: 600;
    font-size: 2rem;
}


select {
    background-color: hsla(0, 0%, 0%, 0.15);
    color: black;
    padding: 1rem;
    min-width: 5rem;
    border: none;
    cursor: pointer;
}

option {
    background-color: white;
    color: black;
    padding: 1rem;
    border: none;
    outline: none;
    border: none;
}

toggle {
    position: relative;
    display: flex;
    justify-content: start;
    align-items: center;
    flex-direction: row-reverse;
    width: 100%;
    margin-block: 1rem;
    cursor: pointer;
    user-select: none;
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    min-width: calc(5rem + 70px);
}

toggle::before {
    content: '';
    position: absolute;
    right: 0;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    width: 50px;
    height: 25px;
    border-radius: 100px;
    background-color: hsla(0, 0%, 0%, 0.15);
}

toggle::after {
    content: '';
    position: absolute;
    right: 3px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    border-radius: 100px;
    background-color: var(--primary);
    transform: translateX(calc(-100% - 3px));
    transition: transform;
    transition-duration: 200ms;
}

toggle[value=true]::after {
    transform: translateX(0);
}