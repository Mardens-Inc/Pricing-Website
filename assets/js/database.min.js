/* Author: Drew Chase */
const listTypes={directory:0,location:1,voice:2};class Database{constructor(){this.total_items=0,this.data={},this.options={},this.listData={},this.columns=[],this.resetURLParameters()}async search(t){return await this.load(this.limit,0,this.sort,this.ascending,t,this.list)}async loadList(t){return await this.load(this.limit,0,"id",!0,"",t)}async sortList(t,i){return await this.load(this.limit,0,t,i,this.keyword,this.list)}async load(t=10,i=0,s="id",e=!0,a="",o=""){this.list=o,this.sort=s,this.ascending=e,this.page=i,this.limit=t,this.keyword=a,this.updateURLParameters(),""!=this.list?(this.listData=await this.loadListData(),this.options=JSON.parse(this.listData.options)):this.options={};let r=`/api/location${""==o?"s":""}.php?limit=${t}&page=${i}&sort=${s}${e?"&asc":""}${""==a?"":"&query="+a}${""==o?"":"&id="+o}`;return await $.ajax({url:r,type:"GET",success:t=>t.error?(console.error(t.error),void alert(t.error)):(this.total_items=t.items.length,this.data=t,$(this).trigger("loaded",[{type:""==o?listTypes.directory:listTypes.location,data:t}]),t),error:t=>{return console.error(`Error loading data: ${JSON.stringify(t)}}`),this.resetURLParameters(),this.updateURLParameters(),confirm("An error occurred while loading the data. Would you like to reload?")&&window.location.reload(),t}})}async loadOptions(){const t=await this.loadListData();return JSON.parse(t.options)}async loadListData(){if(""===this.list)return console.error("Cannot get options for the main list."),null;const t={url:`/api/locations.php?&id=${this.list}&action=single`,type:"GET",success:t=>t,error:t=>(console.error(t),t)};return await $.ajax(t)}async resetURLParameters(){this.list="",this.sort="id",this.ascending=!0,this.page=0,this.limit=10}updateURLParameters(){let t="/?";t+=`limit=${this.limit}`,t+=`&page=${this.page}`,t+=`&sort=${this.sort}`,this.ascending&&(t+="&asc"),""!==this.list&&(t+=`&list=${this.list}`),""!==this.keyword&&(t+=`&q=${this.keyword}`),window.history.pushState("","",t)}async loadColumns(){return await $.ajax({url:`/api/location.php?action=columns&id=${""==this.list?"locations":this.list}`,type:"GET",success:t=>t.columns,error:t=>(console.error(t),t)})}async loadColumnDisplayNames(){let t=(await this.loadColumns()).columns,i=[];return Array.from(t).forEach(t=>{"options"!=t&&"image"!=t&&i.push(t.replace("_"," "))}),{columns:t,displayNames:i}}async generateTable(){let t=await this.loadColumnDisplayNames(),i=t.displayNames;t=t.columns,this.columns=t;let s=$("<table><thead></thead><tbody></tbody></table>"),e=this.data;if(null==e||0==e.length)return s.find("tbody").append("<p>No data found!</p>"),s;s.find("thead").append("<tr></tr>");for(let e=0;e<i.length;e++){let a=i[e],o=t[e];if("options"==o||"image"==o)return;"id"==o&&(a="");let r=$(`<th class="location-${o}" sort="${o}">${a}</th>`);o==this.sort&&r.attr("direction",this.ascending?"asc":"desc"),s.find("thead tr").append(r)}return Array.from(e.items).forEach(i=>{let e=new Date(i.post_date),a="";if(null!=i.image&&""!=i.image&&(a=`<img src="/assets/images/locations/${i.image}">`),""==this.list){let t=$(`\n                <tr>\n                    <td class="location-icon">${a}</td>\n                    <td class="location-name">${i.name}</td>\n                    <td class="location-address">${i.location}</td>\n                    <td class="location-po">${i.po}</td>\n                    <td class="location-date">${e.toLocaleDateString("en-us",{weekday:"long",year:"numeric",month:"short",day:"numeric"})}</td>\n                </tr>\n                `);t.on("click",()=>this.load(this.limit,0,"id",!0,"",i.id)),s.find("tbody").append(t)}else{let e="";for(let s=0;s<t.length;s++){let a=t[s],o=i[a];null==o&&(o=""),e+=`<td class="location-${a}">${o}</td>`}(e=$(`<tr>${e}</tr>`)).on("click",()=>openListItemOptions(e)),s.append(e)}}),s}async editList(t,i,s,e,a){const o=`/api/locations.php?id=${this.list}&action=edit`,r={method:"POST",data:{name:t,location:i,po:s,image:e,options:JSON.stringify(a)},success:function(t){if(t.error)return console.error(`Error editing pricing list: ${t.error}`),alert(`Error editing pricing list: ${t.error}`),void closePopup();database.loadList(database.list),closePopup()},error:function(t,i,s){console.error(`Error editing pricing list: ${s}`),alert(`Error editing pricing list: ${s}`),closePopup()}};$.ajax(o,r)}async deleteAllRows(){if(""==this.list)return;closePopup(),openPopup("loading-popup");const t=`/api/location.php?id=${this.list}`;await $.ajax({url:t,method:"DELETE",success:()=>{this.loadList(this.list)},error:t=>{alert(`Error deleting all rows: ${t.error}`),closePopup()}}),closePopup()}async deleteList(){""!=this.list&&await $.ajax(`/api/locations.php?id=${this.list}`,{method:"DELETE",success:t=>{if(t.error)return console.error(`Error deleting pricing list: ${t.error}`),void alert(`Error deleting pricing list: ${t.error}`);this.loadList(""),closePopup()},error:(t,i,s)=>{console.error(`Error deleting pricing list: ${s}`),alert(`Error deleting pricing list: ${s}`)}})}openVoicePopup(){let t=new Voice(/[^0-9]/g);t.unsupported||(openPopup("voice-search-popup"),$("#voice-search-popup.popup").on("close",()=>{t.stop(),this.search("")}),t.start(),$(t).on("result",async(i,s)=>{$(".voice-notification > p").text(s),closePopup();let e=(await this.search(s)).items,a=e[0][database.options["voice-description-column"]],o=e[0][database.options["voice-price-column"]];o=o.replace("$",""),null!=e&&(0==e.length?t.speak("No results found!"):1==e.length?(t.speak("Found 1 result"),t.speak(`${a} is $${o}`)):(t.speak(`Found ${e.length} results`),t.speak(`The first result is ${a} at $${o}`)))}),$(t).on("interim",(t,i)=>{$(".voice-notification > p").text(i),$(".voice-notification").addClass("active"),$(".voice-notification").addClass("results")}),$(t).on("end",()=>{$(".voice-notification p").text("Listening..."),$(".voice-notification").removeClass("results"),t.shouldListen&&t.start()}))}}class Pagination{constructor(t){this.total_items=Number.parseInt(t.data.total_results),this.current_page=t.data.page,this.items_per_page=t.data.max_count,this.last_page=0,this.pages=this.items_per_page>0?Math.ceil(this.total_items/this.items_per_page):0,this.database=t}getPaginationHTML(){let t=$("<div class='pagination row center horizontal vertical fill'></div>");if(this.pages=Math.ceil(this.total_items/this.items_per_page),this.last_page=this.pages,1>this.current_page&&(this.current_page=1),1>=this.pages)return t;if(this.pages>0){let i=$('<div class="page-item"><button class="page-link secondary">Previous</button></div>');i.on("click",()=>this.previous()),t.prepend(i)}for(let i=1;i<=this.pages;i++){let s=$(`<div class="page-item ${i==this.current_page?"active":""}"><button class="page-link ${this.page==i-1?"":"secondary"}">${i}</button></div>`);s.on("click",()=>{this.page=i-1,this.load()}),t.append(s)}let i=$('<div class="page-item"><button class="page-link secondary">Next</button></div>');return i.on("click",()=>this.next()),t.append(i),t}previous(){this.current_page<this.last_page-1&&(this.current_page++,this.database.load({page:this.current_page,limit:this.items_per_page}),$(this).trigger("previous"))}next(){this.current_page>0&&(this.current_page--,this.database.load({page:this.current_page,limit:this.items_per_page}),$(this).trigger("next"))}}